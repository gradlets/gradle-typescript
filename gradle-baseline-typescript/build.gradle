/*
 * (c) Copyright 2021 Felipe Orozco, Robert Kruszewski. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'java-gradle-plugin'
apply plugin: 'groovy'
apply plugin: 'nebula.maven-base-publish'
apply plugin: 'nebula.maven-manifest'
apply plugin: 'nebula.maven-scm'
apply plugin: 'com.gradle.plugin-publish'

dependencies {
    implementation localGroovy()
    implementation gradleApi()
    implementation 'com.google.guava:guava'
    implementation 'com.palantir.safe-logging:preconditions'

    testImplementation gradleTestKit()
    testImplementation 'com.netflix.nebula:nebula-test'
    testImplementation project(':gradle-typescript')

    compileOnly project(':gradle-typescript')
    compileOnly 'com.palantir.gradle.consistentversions:gradle-consistent-versions'
    compileOnly 'com.palantir.sls-packaging:gradle-sls-packaging'
    compileOnly 'com.palantir.sls-packaging:gradle-recommended-product-dependencies'

    compileOnly 'org.immutables:value::annotations'
    annotationProcessor 'org.immutables:value'
}

test {
    // Replace with real node version check
    if (!System.env.CI) {
        environment 'NODE_OPTIONS', '--openssl-legacy-provider'
    }
}

pluginBundle {
    website = 'https://gradlets.com'
    vcsUrl = 'https://github.com/gradlets/gradle-typescript'
    tags = ['typescript', 'frontend', 'npm', 'yarn']
}

gradlePlugin {
    plugins {
        baselineTypescript {
            id = 'com.gradlets.baseline-typescript'
            displayName = 'Gradle Typescript Baseline'
            description = 'Baseline settings for gradle typescript'
            implementationClass = 'com.gradlets.baseline.typescript.BaselineTypeScript'
        }
    }
}

tasks.named('processResources').configure {
    duplicatesStrategy 'include'
}

tasks.publish.dependsOn tasks.publishPlugins
publishPlugins.onlyIf { versionDetails().isCleanTag }
project.ext.'gradle.publish.key' = System.env["GRADLE_KEY"]
project.ext.'gradle.publish.secret' = System.env["GRADLE_SECRET"]

tasks.checkUnusedDependenciesTest.enabled = false
tasks.checkUnusedDependenciesMain.enabled = false
